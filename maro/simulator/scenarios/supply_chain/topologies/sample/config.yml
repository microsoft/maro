
# TODO: which config to inherit
# base: ""

#core:
#  datamodels: "xxx"
#  units: "xxx"
#  facilities: "xxx"


facility_definitions:
  # facility definition
  WarehouseFacility:
    class: "WarehouseFacility"
    children:
      storage:
        class: "StorageUnit"
      distribution:
        class: "DistributionUnit"
    products:
      class: "ProductUnit"
      # config will be passed to generator as parameters
      config:
        consumer:
          class: "ConsumerUnit"

  SupplierFacility:
    class: "SupplierFacility"
    children:
      storage:
        class: "StorageUnit"
      distribution:
        class: "DistributionUnit"
    products:
      class: "ProductUnit"
      config:
        consumer:
          class: "ConsumerUnit"
        manufacture:
          class: "ManufactureUnit"

  RetailerFacility:
    class: "RetailerFacility"
    children:
      storage:
        class: "StorageUnit"
    products:
      class: "StoreProductUnit"
      config:
        consumer:
          class: "ConsumerUnit"
        seller:
          class: "SellerUnit"
          config:
            sale_hist_len: 4


# a normal distribution definition
normal_distribution: &normal_distribution
  config:
    train:
      number: 2

small_storage: &small_storage
  # config of data model of this unit
  config:
    # other config or storage unit
    capacity: 10000
    unit_storage_cost: 1

medium_storage: &medium_storage
  config:
    capacity: 20000
    unit_storage_cost: 1

huge_storage: &huge_storage
  config:
    capacity: 30000
    unit_storage_cost: 1

# sku list in this world
# this list do not contains price, cost or other facility related attributes,
# but just base info, like name, id, bom
skus: &sku_definitions
  - id: 1
    name: "sku1"
    output_units_per_lot: 12
    # bill of material that used produce current sku, empty means do not need source material
    bom:
      # key is the source sku name, value is quantity needed to use per time to produce current sku
      sku3: 10

  - id: 2
    name: "sku2"
    output_units_per_lot: 1

  - id: 3
    name: "sku3"
    output_units_per_lot: 1


# world definitions
world:
  # here we use reference to make it each to edit.
  skus: *sku_definitions

  # facilities in this world
  facilities:
    - name: "Supplier_001" # name of the facility
      # NOTE: here we do not use yaml anchor override, as it not support partial override with more than 1 level
      # use the facility definition as base, then we can override configs partially.
      definition_ref: "SupplierFacility"

      # sku list of this facility
      skus:
        sku3: # sku name and attributes needed for this facility
          init_stock: 100
          unit_product_cost: 1
          manufacture_rate: 1
          has_manufacture: True
          price: 10

      # configuration of child units.
      children:
        # config of storage unit
        storage: *small_storage
        distribution: *normal_distribution

        # products use default config in core.yml

      # config of this facility
      config:
        unit_delay_order_penalty: 10
        unit_order_cost: 0

    - name: "Supplier_002"
      definition_ref: "SupplierFacility"

      skus:
        sku1:
          init_stock: 100
          unit_product_cost: 1
          manufacture_rate: 1
          has_manufacture: True
          price: 100
        sku3:
          init_stock: 100
          manufacture_rate: 1
          has_consumer: True
          price: 100

      children:
        storage: *small_storage
        distribution: *normal_distribution

      config:
        unit_delay_order_penalty: 10
        unit_order_cost: 0

    - name: "Warehouse_001"
      definition_ref: "WarehouseFacility"

      skus:
        sku1:
          init_stock: 1000
          price: 100
          has_consumer: True
        sku3:
          init_stock: 1000
          price: 100
          has_consumer: True

      children:
        storage: *huge_storage
        distribution: *normal_distribution
      config:
        unit_delay_order_penalty: 10
        unit_order_cost: 0

    - name: "Retailer_001"
      definition_ref: "RetailerFacility"

      skus:
        sku1:
          price: 300
          init_stock: 100
          sale_gamma: 100
          backlog_ratio: 0.1 # optional
          has_consumer: True
          has_seller: True
        sku3:
          price: 200
          init_stock: 100
          sale_gamma: 100
          backlog_ratio: 0.1
          has_consumer: True
          has_seller: True

      children:
        storage: *medium_storage

      config:
        unit_order_cost: 0

  # topology used to specify the up/downstream for facilities
  # we split it from facility, so that we can support configuration inherit to override it
  # for a new topology
  topology:
    # key is current facility, value if upstream facilities that will provide a certain sku
    Supplier_002:
      # this config means "Supplier_002" will purchase "sku3" from facility "Supplier_001",
      # or any other facility in the list
      sku3:
        "Supplier_001":
          train:
            vlt: 7
            cost: 1
    Warehouse_001:
      sku1:
        "Supplier_002":
          train:
            vlt: 7
            cost: 1
      sku3:
        "Supplier_001":
          train:
            vlt: 7
            cost: 1
    Retailer_001:
      sku1:
        "Supplier_002":
          train:
            vlt: 7
            cost: 1
      sku3:
        "Supplier_001":
          train:
            vlt: 7
            cost: 1

settings:
  pending_order_len: 4


policy_parameter:
  facilities:
    Supplier_001:
      max_price: 10
    Supplier_002:
      max_price: 100
    Warehouse_001:
      max_price: 100
    Retailer_001:
      max_price: 300
