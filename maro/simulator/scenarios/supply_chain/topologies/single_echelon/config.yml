facility_definitions:
  # Key: would be used as "definition_ref" in world.facilities
  DistributionCentre:
    # class: the class alias defined in core.yml
    class: SupplierFacility
    datamodel: FacilityDataModel
    children:
      storage:
        class: SuperStorageUnit
      distribution:
        class: DistributionUnit
    products:
      class: ProductUnit

  StoreFacility:
    class: OuterRetailerFacility
    datamodel: FacilityDataModel
    children:
      storage:
        class: StorageUnit
    products:
      class: StoreProductUnit
      config:
        consumer:
          class: ConsumerUnit
        seller:
          class: OuterSellerUnit
          config:
            sale_hist_len: 14
    config:
      dynamics_sampler_type: processed_price_demand # What kind of sampler to use.
      sku_column: SKU # SKU column name
      price_column: Price # Price column name
      demand_column: Demand # Demand column name
      datetime_column: Date # Date-time column name
      file_path: /path/to/data.csv # full path to data file, override by each store instance


world:
  skus:
    - id: 10
      name: product_0
    - id: 11
      name: product_1
    - id: 12
      name: product_2

  facilities:
    - name: DC
      definition_ref: DistributionCentre
      children:
        storage:
          config:
            capacity: null  # null indicates infinite storage capacity.
            unit_storage_cost: 0
        distribution: # TODO: add LC constraint
          config:
            train:
              number: null  # null indicates infinite distribution capacity.
      skus:
        "product_0":
          price: 5
          init_stock: 1000
          sub_storage_id: 0
          has_manufacture: False
        "product_1":
          price: 5
          init_stock: 5000
          sub_storage_id: 0
          has_manufacture: False
        "product_2":
          price: 10
          init_stock: 5000
          sub_storage_id: 0
          has_manufacture: False
      config:
        unit_order_cost: 0
        unit_delay_order_penalty: 0

    - name: Store_1
      definition_ref: StoreFacility
      children:
        storage:  # TODO: total capacity constraint for each store?
          config:
            -
              id: 0
              capacity: 500
              unit_storage_cost: 0.1  # NOTE: Holding cost for product_0
            -
              id: 1
              capacity: 300
              unit_storage_cost: 0.2  # NOTE: Holding cost for product_1
      skus:
        "product_0":
          price: 5
          init_stock: 500
          sub_storage_id: 0
          has_consumer: True
          has_seller: True
          sale_gamma: 250
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
        "product_1":
          price: 12
          init_stock: 300
          sub_storage_id: 1
          has_consumer: True
          has_seller: True
          sale_gamma: 150
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
      config:
        unit_order_cost: 0
        file_path:  /home/jinyu/maro/maro/simulator/scenarios/supply_chain/topologies/single_echelon/store_1_demand.csv

    - name: Store_2
      definition_ref: StoreFacility
      children:
        storage:  # TODO: total capacity constraint for each store?
          config:
            -
              id: 0
              capacity: 500
              unit_storage_cost: 0.1  # NOTE: Holding cost for product_0
            -
              id: 2
              capacity: 300
              unit_storage_cost: 0.2  # NOTE: Holding cost for product_2
      skus:
        "product_0":
          price: 5
          init_stock: 500
          sub_storage_id: 0
          has_consumer: True
          has_seller: True
          sale_gamma: 250
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
        "product_2":
          price: 12
          init_stock: 300
          sub_storage_id: 2
          has_consumer: True
          has_seller: True
          sale_gamma: 150
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
      config:
        unit_order_cost: 0
        file_path:  /home/jinyu/maro/maro/simulator/scenarios/supply_chain/topologies/single_echelon/store_2_demand.csv

    - name: Store_3
      definition_ref: StoreFacility
      children:
        storage:  # TODO: total capacity constraint for each store?
          config:
            -
              id: 0
              capacity: 400
              unit_storage_cost: 0.1  # NOTE: Holding cost for product_0
            -
              id: 1
              capacity: 200
              unit_storage_cost: 0.2  # NOTE: Holding cost for product_1
            -
              id: 2
              capacity: 200
              unit_storage_cost: 0.2  # NOTE: Holding cost for product_2
      skus:
        "product_0":
          price: 5
          init_stock: 400
          sub_storage_id: 0
          has_consumer: True
          has_seller: True
          sale_gamma: 200
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
        "product_1":
          price: 12
          init_stock: 200
          sub_storage_id: 1
          has_consumer: True
          has_seller: True
          sale_gamma: 100
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
        "product_2":
          price: 12
          init_stock: 200
          sub_storage_id: 2
          has_consumer: True
          has_seller: True
          sale_gamma: 100
          unit_order_cost: 0
          backlog_ratio: 0.1  # NOTE: LS = price * backlog_ratio
      config:
        unit_order_cost: 0
        file_path:  /home/jinyu/maro/maro/simulator/scenarios/supply_chain/topologies/single_echelon/store_3_demand.csv

  topology:
    "Store_1":
      "product_0":
        "DC":
          train:
            vlt: 1
            cost: 0
      "product_1":
        "DC":
          train:
            vlt: 2
            cost: 0

    "Store_2":
      "product_0":
        "DC":
          train:
            vlt: 2
            cost: 0
      "product_2":
        "DC":
          train:
            vlt: 3
            cost: 0

    "Store_3":
      "product_0":
        "DC":
          train:
            vlt: 1
            cost: 0
      "product_1":
        "DC":
          train:
            vlt: 1
            cost: 0
      "product_2":
        "DC":
          train:
            vlt: 1
            cost: 0

settings:
  pending_order_len: 4  # For initialization of Consumer Units
  start_date_time: "2023-01-01"
